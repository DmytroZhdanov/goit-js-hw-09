{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,uBAAqBH,QAAiBC,OAExCG,EAAE,sBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,EAjCA,CACXA,MAAOQ,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,WAG1BG,KAAKC,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAIC,iBACJ,MACEC,UAAUhB,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,IACvBG,EAAIG,cAER,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOQ,MAAOD,GAAK,EAAG,CACzC,MAAME,GAAgBpB,EAAMmB,QAAST,EAAKS,MAAQD,EAElDpB,EAAcoB,EAAGE,GACdC,MAAKC,GAAU1B,EAAA2B,OAAOC,QAAQF,KAC9BG,OAAMC,GAAS9B,EAAA2B,OAAOI,QAAQD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSbmt);\n\nfunction onFormSbmt(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  for (let i = 0; i < +amount.value; i += 1) {\n    const countedDelay = +delay.value + +step.value * i;\n\n    createPromise(i, countedDelay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","step","amount","form","addEventListener","evt","preventDefault","elements","currentTarget","i","value","countedDelay","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.b7cb3982.js.map"}